/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Vista.Secretaria;

import Controlador.ControladorPagoMulta;
import Excepciones.DatoDigitadoExcepcion;
import Modelo.Multa;
import Modelo.Validacion;
import java.util.Date;
import javax.swing.JOptionPane;
/**
 *
 * @author USER
 */
public class PagoMulta extends javax.swing.JFrame {

    private ControladorPagoMulta controlador;
    private Validacion validacion;
    /**
     * Creates new form PagoMulta
     */
    public PagoMulta() {
        initComponents();
        setLocationRelativeTo(null);
        controlador = new ControladorPagoMulta();
        this.validacion = new Validacion();
        llenarComboMultas();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        cbxMultas = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDetalle = new javax.swing.JTextArea();
        btnPagar = new javax.swing.JButton();
        txtTotal = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cbxDia = new javax.swing.JComboBox<>();
        cbxMes = new javax.swing.JComboBox<>();
        txtAñoCita = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        lblValidacion = new javax.swing.JLabel();
        btnVolver = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "PAGO MULTA", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        cbxMultas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxMultasActionPerformed(evt);
            }
        });

        txtDetalle.setColumns(20);
        txtDetalle.setRows(5);
        jScrollPane1.setViewportView(txtDetalle);

        btnPagar.setText("PAGAR");
        btnPagar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPagarActionPerformed(evt);
            }
        });

        txtTotal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTotalKeyTyped(evt);
            }
        });

        jLabel1.setText("Ingrese el total a pagar");

        jLabel3.setText("Ingrese la fecha del pago:");

        cbxDia.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Dia", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        cbxMes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mes", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));

        txtAñoCita.setText("AÑO");
        txtAñoCita.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtAñoCitaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtAñoCitaFocusLost(evt);
            }
        });
        txtAñoCita.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtAñoCitaKeyTyped(evt);
            }
        });

        jLabel2.setText("Detalle de la multa:");

        lblValidacion.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        lblValidacion.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(123, 123, 123)
                .addComponent(btnPagar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel2))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jScrollPane1)
                                .addComponent(cbxMultas, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(55, 55, 55)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtAñoCita, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cbxMes, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(cbxDia, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(36, 36, 36))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(lblValidacion, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cbxMultas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addGap(4, 4, 4)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cbxDia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbxMes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtAñoCita, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(27, 27, 27)
                .addComponent(btnPagar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addComponent(lblValidacion, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );

        btnVolver.setText("Volver");
        btnVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnVolver))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(btnVolver)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Metodo que maneja el evento del boton de volver para retroceder de ventana
     * @param evt 
     */
    private void btnVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverActionPerformed
        VistaSecretaria secre = new VistaSecretaria();
        secre.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnVolverActionPerformed

    /**
     * Metodo que maneja el evento del boton pagar para pagar la multa
     * @param evt 
     */
    private void btnPagarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPagarActionPerformed
        //Validamos los campos
        if( cbxDia.getSelectedIndex() == 0 || cbxMes.getSelectedIndex() == 0  || 
                txtAñoCita.getText().equals("AÑO") || txtAñoCita.getText().isBlank() )
        {
            JOptionPane.showMessageDialog(null, "Faltan campos por seleccionar");
            return;
        }
        
        //Parseamos los datos para crear la fecha
        int dia = Integer.parseInt(cbxDia.getSelectedItem().toString());
        int mes = Integer.parseInt(cbxMes.getSelectedItem().toString());
        int año = Integer.parseInt(txtAñoCita.getText());
        
        //En caso de que el mes sea 2 (febrero), validar si los dias y el año corresponden
        if( mes == 2 && dia >= 30 ){
            JOptionPane.showMessageDialog(null, "Febrero no tiene esa cantidad de dias");
            return;
        }
        
        //En caso de que el mes sea 2 (febrero), validar si es un año bisiesto
        if( mes == 2 && dia == 29 && año % 4 != 0 ){
            JOptionPane.showMessageDialog(null, "Febrero no tiene esa cantidad de dias");
            return;
        }
        
        // los meses 4, 6, 9 y 11 solo tienen 30 dias
        if( (mes == 4 || mes == 6 || mes == 9 || mes == 11 ) && ( dia == 31 ) ){
            JOptionPane.showMessageDialog(null, "El mes seleccionado no tiene esa cantidad de dias");
            return;
        }
        
        //Creamos la fecha del pago
        Date fecha = new Date(año, mes-1, dia);
        
        //Obtenemos el valos a pagar
        double valorTotal = Double.parseDouble(txtTotal.getText());
        Multa multa = (Multa) cbxMultas.getSelectedItem();
        
        //No se si esto se pueda dejar aqui o haya que hacer un controlador para meter esto
        if( valorTotal != multa.getValorTotal() ){
            JOptionPane.showMessageDialog(null, "Valor no válido");
            return;
        }
        
        //Se setea la fecha de pago de la multa
        multa.setFechaPago(fecha);
        boolean pagada = controlador.eliminarMulta(multa.getCita().getPaciente().getDocumento());
        if( pagada ){
            JOptionPane.showMessageDialog(null, "Multa pagada!!");
            resetear();
            llenarComboMultas();
        }else{
            JOptionPane.showMessageDialog(null, "Ocurrió un error");
        }
    }//GEN-LAST:event_btnPagarActionPerformed

    /**
     * Metodo para que cada vez que se seleccione un paciente se muestre el detalle de su multa
     * @param evt 
     */
    private void cbxMultasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxMultasActionPerformed
        //Si el primer elemento esta seleccionado, no es válido
        //por lo tanto se muestra ese aviso
        if( cbxMultas.getSelectedIndex()==0 ) {
            txtDetalle.setText("Ninguna multa seleccionada");
            return;
        }
        Multa multa = (Multa) cbxMultas.getSelectedItem();
        //Se verifica que la multa no sea nula
        if( multa != null ){
            txtDetalle.setText(multa.getCita().getFecha().toString() + "\n" +
                    "Doctor: " + multa.getCita().getDoctor() + "\n" +
                    "Paciente: " + multa.getCita().getPaciente() + "\n\n"+
                   "Valos a pagar: " + multa.getValorTotal());
        }
    }//GEN-LAST:event_cbxMultasActionPerformed

    /**
     * Metodo para remover el texto del texfield del año, ya que este es solo un indicador
     * @param evt 
     */
    private void txtAñoCitaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtAñoCitaFocusGained
        if( txtAñoCita.getText().equals("AÑO")  ){
            txtAñoCita.setText("");
        }
    }//GEN-LAST:event_txtAñoCitaFocusGained

    /**
     * Metodo para insertar el indicador de AÑO si este pierde el foco y no habia nada escrito
     * @param evt 
     */
    private void txtAñoCitaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtAñoCitaFocusLost
        if( txtAñoCita.getText().equals("")  ){
            txtAñoCita.setText("AÑO");
        }
    }//GEN-LAST:event_txtAñoCitaFocusLost
     
   
    /**
     * Metodo para que el usuario solo digite numeros en el textField del año del pago
     * @param evt 
     */
    private void txtAñoCitaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAñoCitaKeyTyped
        try{
              lblValidacion.setText("");
              validacion.validarSoloNumeros(evt);
          }catch( DatoDigitadoExcepcion ex ){
              lblValidacion.setText(ex.getMessage());
          }
    }//GEN-LAST:event_txtAñoCitaKeyTyped

    /**
     * Metodo para que el usuario solo digite numeros en el textField del total a pagar
     * @param evt 
     */
    private void txtTotalKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTotalKeyTyped
        try{
              lblValidacion.setText("");
              validacion.validarSoloNumeros(evt);
          }catch( DatoDigitadoExcepcion ex ){
              lblValidacion.setText(ex.getMessage());
          }
    }//GEN-LAST:event_txtTotalKeyTyped

    /**
     * Metodo que se encarga de llenar el combobox con los pacientes para ser seleccionados
     */
    private void llenarComboMultas(){
        cbxMultas.removeAllItems();
        cbxMultas.addItem("Seleccione una multa");
        
        for (Multa multa : controlador.getMultas()) {
            cbxMultas.addItem(multa);
        }
    }
    
    /**
     * Metodo que resetea los campos
     */
    private void resetear(){
        txtAñoCita.setText("AÑO");
        cbxDia.setSelectedItem("Dia");
        cbxMes.setSelectedItem("Mes");
        txtTotal.setText("");
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnPagar;
    private javax.swing.JButton btnVolver;
    private javax.swing.JComboBox<String> cbxDia;
    private javax.swing.JComboBox<String> cbxMes;
    private javax.swing.JComboBox cbxMultas;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblValidacion;
    private javax.swing.JTextField txtAñoCita;
    private javax.swing.JTextArea txtDetalle;
    private javax.swing.JTextField txtTotal;
    // End of variables declaration//GEN-END:variables
}
